{"version":3,"sources":["redux/books/books.js","redux/configureStore.js","components/Option.js","components/update/EditBook.js","components/update/Comments.js","components/update/UpdateProgress.js","components/Book.js","components/AllBooks.js","pages/BooksPage.js","pages/CategoryPage.js","pages/PageNotFound.js","components/Footer.js","components/Form.js","components/ListItem.js","components/Navbar.js","components/App.js","index.js"],"names":["ADD_BOOK","REMOVE_BOOK","GET_BOOKS","getBooks","books","type","initialState","getFromServer","dispatch","a","fetch","json","result","sendToServer","data","method","headers","body","JSON","stringify","then","response","text","removeFromServer","id","item_id","rootReducer","combineReducers","state","action","book","Object","entries","map","item","title","category","filter","store","createStore","applyMiddleware","logger","thunk","Option","value","content","EditBook","setEditBook","toggleBodyScroll","bookCategories","split","title2","author","completed","chapters","currChapter","comments","timeStamp","useState","setBook","useDispatch","hangleChange","e","target","name","prev","parseInt","className","onChange","placeholder","index","toString","Math","random","onClick","newState","uuidv4","setTimeout","Comments","props","comment","newComment","setNewComment","setShowComments","parse","length","date","Date","toDateString","jsonComment","push","newComments","UpdateProgress","setShowProgress","setChapter","setSetChapter","chaptersArray","num","i","Options","console","log","Book","editMode","setEditMode","showComments","progressValue","setProgressValue","showProgress","document","querySelector","classList","toggle","useEffect","secondCircle","thirdStep","style","strokeDashoffset","width","height","cx","cy","r","AllBooks","allBooks","useSelector","newBook","Books","sort","b","BooksPage","CategoryPage","PageNotFound","Footer","Form","string","getTime","ListItem","route","to","activeClassName","exact","Navbar","routes","App","path","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.eadac198.chunk.js","sourcesContent":["const ADD_BOOK = 'bookstore/book/LOAD_BOOKS';\nconst REMOVE_BOOK = 'bookstore/book/REMOVE_BOOK';\nconst GET_BOOKS = 'bookstore/book/GET_BOOKS';\n\n// Create actions\nexport function addBook(book) {\n  return { type: ADD_BOOK, book };\n}\n\nexport function removeBook(id) {\n  return { type: REMOVE_BOOK, id };\n}\n\nexport function getBooks(books) {\n  return { type: GET_BOOKS, books };\n}\n\nconst initialState = [];\n\n// Define reducer\nexport default function reducer(state = initialState, action = {}) {\n  const {\n    book,\n    id,\n    type,\n    books,\n  } = action;\n  switch (type) {\n    case ADD_BOOK:\n      return [...state, book];\n    case GET_BOOKS:\n      return [\n        ...Object.entries(books).map((item) => ({\n          id: item[0],\n          title: item[1][0].title,\n          category: item[1][0].category,\n        })),\n      ];\n    case REMOVE_BOOK:\n      return state.filter((item) => item.id !== id);\n    default:\n      return state;\n  }\n}\n\nexport const getFromServer = () => async (dispatch) => {\n  const url = 'https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi';\n  const books = await fetch(`${url}/apps/nU7PpkbrGSD80b3w1Lzl/books/`);\n  const result = await books.json();\n  dispatch(getBooks(result));\n};\n\nexport const sendToServer = (data) => (dispatch) => {\n  const url = 'https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi';\n  fetch(`${url}/apps/nU7PpkbrGSD80b3w1Lzl/books/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  })\n    .then((response) => response.text())\n    .then(() => {\n      dispatch(getFromServer());\n    });\n};\n\nexport const removeFromServer = (id) => (dispatch) => {\n  const url = 'https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi';\n  fetch(`${url}/apps/nU7PpkbrGSD80b3w1Lzl/books/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ item_id: id }),\n  })\n    .then((response) => response.text())\n    .then(() => {\n      dispatch(getFromServer());\n    });\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport books from './books/books';\n\nconst rootReducer = combineReducers({ books });\n\nconst store = createStore(rootReducer, applyMiddleware(logger, thunk));\n\nexport default store;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst Option = ({ value, content }) => (\n  <option value={value}>\n    {content}\n  </option>\n);\n\nOption.propTypes = {\n  value: propTypes.string.isRequired,\n  content: propTypes.string.isRequired,\n};\n\nexport default Option;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport Option from '../Option';\nimport { removeFromServer, sendToServer } from '../../redux/books/books';\n\nconst EditBook = ({\n  title,\n  category,\n  id,\n  setEditBook,\n  toggleBodyScroll,\n}) => {\n  const bookCategories = [\n    { value: 'Fiction', content: 'Fiction' },\n    { value: 'Nonfiction', content: 'Nonfiction' },\n    { value: 'Drama', content: 'Drama' },\n    { value: 'Folktale', content: 'Folktale' },\n    { value: 'Poetry', content: 'Poetry' },\n  ];\n  const Options = () => bookCategories.map((category, index) => {\n    const { value, content } = category;\n    return (\n      <Option\n        key={Math.random()}\n        index={index}\n        value={value.toString()}\n        content={content}\n      />\n    );\n  });\n\n  const [title2, author, completed, chapters, currChapter, comments, timeStamp] = title.split('<*)$!?^|^?!$(*>');\n\n  const [book, setBook] = useState({\n    title: title2,\n    author,\n    completed,\n    category,\n    chapters,\n    currChapter,\n    comments,\n    timeStamp,\n  });\n\n  const dispatch = useDispatch();\n\n  const hangleChange = (e) => {\n    const { name, value } = e.target;\n    setBook((prev) => {\n      if (name === 'chapters' && (parseInt(value, 10) < parseInt(chapters, 10))) {\n        return ({\n          ...prev,\n          currChapter: '0',\n          [name]: value,\n        });\n      }\n      return ({\n        ...prev,\n        currChapter,\n        [name]: value,\n      });\n    });\n  };\n\n  const save = () => {\n    dispatch(removeFromServer(id));\n    const newState = {\n      title: `${book.title}<*)$!?^|^?!$(*>${book.author}<*)$!?^|^?!$(*>${book.completed}<*)$!?^|^?!$(*>${book.chapters}<*)$!?^|^?!$(*>${book.currChapter}<*)$!?^|^?!$(*>${book.comments}<*)$!?^|^?!$(*>${book.timeStamp}`,\n      category: book.category,\n      item_id: uuidv4(),\n    };\n\n    setTimeout(() => dispatch(sendToServer(newState)), 1000);\n\n    setBook(() => ({\n      title: '',\n      category: 'Fiction',\n      author: '',\n      completed: '0%',\n      chapters: '',\n      currChapter: '0',\n    }));\n    toggleBodyScroll();\n    return true;\n  };\n\n  const onClickCancel = () => {\n    setEditBook((prev) => !prev);\n    toggleBodyScroll();\n  };\n\n  return (\n    <section className=\"edit-container\">\n      <form className=\"edit-form\">\n        <div>\n          <span>Title: </span>\n          <input\n            name=\"title\"\n            type=\"text\"\n            onChange={hangleChange}\n            value={book.title}\n            placeholder=\"Book title\"\n            className=\"book-title\"\n          />\n        </div>\n        <div>\n          <span>Category: </span>\n          <select\n            className=\"book-category\"\n            name=\"category\"\n            onChange={hangleChange}\n            value={book.category}\n            id=\"books\"\n          >\n            {Options()}\n          </select>\n        </div>\n        <div>\n          <span>Author: </span>\n          <input\n            name=\"author\"\n            type=\"text\"\n            onChange={hangleChange}\n            value={book.author}\n            placeholder=\"Author\"\n            className=\"book-author\"\n          />\n        </div>\n        <div>\n          <span>Chapters: </span>\n          <input\n            name=\"chapters\"\n            type=\"number\"\n            onChange={hangleChange}\n            value={book.chapters}\n            placeholder=\"Chapters\"\n            className=\"book-chapters\"\n          />\n        </div>\n        <div>\n          <button className=\"edit-cancel-btn\" onClick={onClickCancel} type=\"button\">Cancel</button>\n          <button className=\"edit-save-btn\" onClick={save} type=\"button\">Save</button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nEditBook.propTypes = {\n  title: propTypes.string.isRequired,\n  category: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  setEditBook: propTypes.func.isRequired,\n  toggleBodyScroll: propTypes.func.isRequired,\n};\n\nexport default EditBook;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { removeFromServer, sendToServer } from '../../redux/books/books';\n\nconst Comments = (props) => {\n  const dispatch = useDispatch();\n  const [newComment, setNewComment] = useState({ name: '', comment: '' });\n  const { title, setShowComments, toggleBodyScroll } = props;\n  const [, , , , , comments] = title.split('<*)$!?^|^?!$(*>');\n  const allComments = () => (\n    JSON.parse(comments).map((comment) => (\n      <tr className=\"comment-tr\" key={uuidv4()}>\n        <td>{comment.name}</td>\n        <td>{comment.comment}</td>\n        <td>{comment.date}</td>\n      </tr>\n    )));\n\n  const hangleChange = (e) => {\n    const { name, value } = e.target;\n    setNewComment((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const onAddComment = () => {\n    if (!newComment.name && !newComment.comment) {\n      return;\n    }\n    const { id, title, category } = props;\n    const [title2, author, completed, chapters, currChapter, comments, timeStamp] = title.split('<*)$!?^|^?!$(*>');\n    dispatch(removeFromServer(id));\n    newComment.date = new Date().toDateString();\n    const jsonComment = JSON.parse(comments);\n    jsonComment.push(newComment);\n\n    const newComments = JSON.stringify(jsonComment);\n    const newState = {\n      title: `${title2}<*)$!?^|^?!$(*>${author}<*)$!?^|^?!$(*>${completed}<*)$!?^|^?!$(*>${chapters}<*)$!?^|^?!$(*>${currChapter}<*)$!?^|^?!$(*>${newComments}<*)$!?^|^?!$(*>${timeStamp}`,\n      category,\n      item_id: uuidv4(),\n    };\n    setTimeout(() => dispatch(sendToServer(newState)), 1000);\n    toggleBodyScroll();\n  };\n\n  const onCancel = () => {\n    setShowComments((prev) => !prev);\n    toggleBodyScroll();\n  };\n\n  return (\n    <div className=\"edit-container\">\n      <div className=\"comment-box\">\n        <h1>\n          All Comments (\n          {JSON.parse(comments).length}\n          )\n        </h1>\n        <table className=\"comment-table\">\n          <tbody className=\"comment-tb\">\n            <tr className=\"comment-tr\">\n              <th>Name</th>\n              <th>Comment</th>\n              <th>Date</th>\n            </tr>\n            {allComments()}\n          </tbody>\n        </table>\n        <h1 className=\"add-heading\">Add A Comment</h1>\n        <form className=\"comment-form\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            onChange={hangleChange}\n            value={newComment.name}\n            placeholder=\"Name\"\n            className=\"name\"\n          />\n          <textarea\n            name=\"comment\"\n            type=\"text\"\n            onChange={hangleChange}\n            value={newComment.comment}\n            placeholder=\"Write your comment\"\n            className=\"comment\"\n          />\n          <div className=\"comment-buttons\">\n            <button className=\"cancel\" onClick={onCancel} type=\"button\">Cancel</button>\n            <button className=\"add-comment\" onClick={onAddComment} type=\"button\">Add Comment</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nComments.propTypes = {\n  id: propTypes.string.isRequired,\n  title: propTypes.string.isRequired,\n  category: propTypes.string.isRequired,\n  setShowComments: propTypes.func.isRequired,\n  toggleBodyScroll: propTypes.func.isRequired,\n};\n\nexport default Comments;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { removeFromServer, sendToServer } from '../../redux/books/books';\nimport Option from '../Option';\n\nconst UpdateProgress = ({\n  title,\n  id,\n  category,\n  setShowProgress,\n  toggleBodyScroll,\n}) => {\n  const dispatch = useDispatch();\n  const [title2, author, completed, chapters,, comments, timeStamp] = title.split('<*)$!?^|^?!$(*>');\n  const [setChapter, setSetChapter] = useState(0);\n\n  const Options = () => {\n    const chaptersArray = [];\n    const num = parseInt(chapters, 10);\n    for (let i = 0; i <= num; i += 1) {\n      chaptersArray.push(i);\n    }\n    return chaptersArray.map((num, index) => (\n      <Option\n        key={uuidv4()}\n        value={num.toString()}\n        content={`Chapter ${num}`}\n        index={index}\n      />\n    ));\n  };\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setSetChapter(() => value);\n  };\n\n  const closePopup = () => {\n    setShowProgress((prev) => !prev);\n    toggleBodyScroll();\n  };\n\n  const updateProgress = () => {\n    dispatch(removeFromServer(id));\n\n    const newState = {\n      title: `${title2}<*)$!?^|^?!$(*>${author}<*)$!?^|^?!$(*>${completed}<*)$!?^|^?!$(*>${chapters}<*)$!?^|^?!$(*>${setChapter}<*)$!?^|^?!$(*>${comments}<*)$!?^|^?!$(*>${timeStamp}`,\n      category,\n      item_id: uuidv4(),\n    };\n    console.log(newState, 'new state');\n    setTimeout(() => dispatch(sendToServer(newState)), 1000);\n    toggleBodyScroll();\n  };\n\n  return (\n    <div className=\"edit-container\">\n      <div className=\"update-container\">\n        <span className=\"heading\">Select Current Progress</span>\n        <span>(Last Completed Chapter)</span>\n        <select\n          className=\"chapter\"\n          name=\"chapter\"\n          onChange={handleChange}\n          value={setChapter}\n        >\n          {Options()}\n        </select>\n        <div className=\"update-buttons\">\n          <button onClick={closePopup} type=\"button\">\n            Cancel\n          </button>\n          <button onClick={updateProgress} type=\"button\">\n            Update Progress\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nUpdateProgress.propTypes = {\n  title: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  category: propTypes.string.isRequired,\n  setShowProgress: propTypes.func.isRequired,\n  toggleBodyScroll: propTypes.func.isRequired,\n};\n\nexport default UpdateProgress;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { removeFromServer } from '../redux/books/books';\nimport EditBook from './update/EditBook';\nimport Comments from './update/Comments';\nimport UpdateProgress from './update/UpdateProgress';\n\nconst Book = ({\n  title,\n  category,\n  id,\n  index,\n}) => {\n  const [editMode, setEditMode] = useState(false);\n  const [showComments, setShowComments] = useState(false);\n  const [progressValue, setProgressValue] = useState(250);\n  const [showProgress, setShowProgress] = useState(false);\n  const [title2, author, , chapters, currChapter] = title.split('<*)$!?^|^?!$(*>');\n  const dispatch = useDispatch();\n  const remove = () => dispatch(removeFromServer(id));\n\n  const toggleBodyScroll = () => {\n    const body = document.querySelector('body');\n    body.classList.toggle('stop-scrolling');\n  };\n\n  const displayComments = () => {\n    setShowComments((prev) => !prev);\n    toggleBodyScroll();\n  };\n\n  const onClickUpdate = () => {\n    setShowProgress((prev) => !prev);\n    toggleBodyScroll();\n  };\n\n  const onClickEdit = () => {\n    setEditMode((prev) => !prev);\n    toggleBodyScroll();\n  };\n\n  useEffect(() => {\n    const secondCircle = document.querySelector(`.some${index}`);\n    const chap = parseInt(chapters || 1, 10);\n    const currChap = parseInt(currChapter, 10);\n    const fraction = 251 / chap;\n    const secondStep = fraction * currChap;\n    const thirdStep = 251 - secondStep;\n    secondCircle.style.strokeDashoffset = thirdStep;\n  }, [progressValue, chapters, currChapter, index]);\n  return (\n    <div className=\"book\">\n      {editMode && (\n        <EditBook\n          title={title}\n          category={category}\n          id={id}\n          setEditBook={setEditMode}\n          toggleBodyScroll={toggleBodyScroll}\n        />\n      )}\n      {showComments && (\n        <Comments\n          title={title}\n          id={id}\n          category={category}\n          setShowComments={setShowComments}\n          toggleBodyScroll={toggleBodyScroll}\n        />\n      )}\n      {showProgress && (\n        <UpdateProgress\n          title={title}\n          id={id}\n          category={category}\n          setShowProgress={setShowProgress}\n          setProgressValue={setProgressValue}\n          toggleBodyScroll={toggleBodyScroll}\n        />\n      )}\n      <div className=\"part1\">\n        <div className=\"part1-first\">\n          <div className=\"category\">{category}</div>\n          <div className=\"title\">{title2}</div>\n          <div className=\"author\">{author}</div>\n        </div>\n        <div className=\"part1-second\">\n          <button\n            onClick={displayComments}\n            className=\"comment-button\"\n            type=\"button\"\n          >\n            Comment\n          </button>\n          |\n          <button className=\"remove-button\" type=\"button\" onClick={remove}>\n            Remove\n          </button>\n          |\n          <button\n            onClick={onClickEdit}\n            className=\"edit-button\"\n            type=\"button\"\n          >\n            Edit\n          </button>\n        </div>\n      </div>\n      <div className=\"part2And3\">\n        <div className=\"part2\">\n          <svg className=\"svg\" width=\"150\" height=\"150\">\n            <circle className=\"circle-back\" cx=\"50\" cy=\"80\" r=\"40\" />\n            <circle className={`some${index} circle-front`} cx=\"50\" cy=\"80\" r=\"40\" />\n          </svg>\n          <div>\n            <div className=\"percent\">{`${parseInt((100 / parseInt(chapters, 10)) * parseInt(currChapter, 10), 10)}%`}</div>\n            <div className=\"completed\">completed</div>\n          </div>\n        </div>\n        <div className=\"pipe\" />\n        <div className=\"part3\">\n          <div className=\"current-chapter\">Current Chapter</div>\n          <div className=\"chapter\">\n            <span className=\"capterXOfY\">{`Chapter ${currChapter} of ${chapters}`}</span>\n          </div>\n          <button\n            onClick={onClickUpdate}\n            className=\"update-button\"\n            type=\"button\"\n          >\n            Update Progress\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nBook.propTypes = {\n  title: propTypes.string.isRequired,\n  category: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  index: propTypes.number.isRequired,\n};\n\nexport default Book;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFromServer } from '../redux/books/books';\nimport Book from './Book';\n\nconst AllBooks = () => {\n  const dispatch = useDispatch();\n  const allBooks = useSelector((state) => state);\n  const books = allBooks.books.length ? allBooks.books : [];\n  books.map((book) => {\n    const newBook = book;\n    const { title } = newBook;\n    const [,,,,,, timeStamp] = title.split('<*$!?^|^?!$*>');\n    newBook.timeStamp = timeStamp;\n    return newBook;\n  });\n  const Books = books.sort(\n    (a, b) => parseInt(a.timeStamp, 10) - parseInt(b.timeStamp, 10),\n  ).map((book, index) => {\n    const {\n      title,\n      category,\n      id,\n    } = book;\n\n    return (\n      <Book\n        key={Math.random()}\n        title={title}\n        category={category}\n        id={id}\n        index={index}\n      />\n    );\n  });\n\n  useEffect(() => {\n    dispatch(getFromServer());\n  }, [dispatch]);\n\n  return <div className=\"all-books\">{Books}</div>;\n};\n\nexport default AllBooks;\n","import React from 'react';\nimport AllBooks from '../components/AllBooks';\n\nconst BooksPage = () => (\n  <div>\n    <AllBooks />\n  </div>\n);\n\nexport default BooksPage;\n","import React from 'react';\n\nconst CategoryPage = () => (\n  <div className=\"category-page\">Under construction...</div>\n);\n\nexport default CategoryPage;\n","import React from 'react';\n\nconst PageNotFound = () => <h1>Page Not Found</h1>;\n\nexport default PageNotFound;\n","import React from 'react';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <p className=\"footer-text\">Created with 💖 by Henry Kc at Microverse Inc., US.</p>\n  </footer>\n);\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { sendToServer } from '../redux/books/books';\nimport Option from './Option';\n\nconst Form = () => {\n  const dispatch = useDispatch();\n  const [book, setBook] = useState({\n    title: '',\n    category: 'Fiction',\n    author: '',\n    chapters: '',\n    currChapter: '0',\n    completed: '0%',\n    comments: [],\n  });\n\n  const bookCategories = [\n    { value: 'Fiction', content: 'Fiction' },\n    { value: 'Nonfiction', content: 'Nonfiction' },\n    { value: 'Drama', content: 'Drama' },\n    { value: 'Folktale', content: 'Folktale' },\n    { value: 'Poetry', content: 'Poetry' },\n  ];\n\n  const Options = () => bookCategories.map((category, index) => {\n    const { value, content } = category;\n    return (\n      <Option\n        key={Math.random()}\n        index={index}\n        value={value}\n        content={content}\n      />\n    );\n  });\n\n  const hangleChange = (e) => {\n    const { name, value } = e.target;\n    setBook((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const onAddBook = () => {\n    const {\n      title,\n      author,\n      completed,\n      category,\n      chapters,\n      currChapter,\n      comments,\n    } = book;\n    if (!title || !author || !chapters) {\n      return false;\n    }\n    const string = JSON.stringify(comments);\n    const newState = {\n      title: `${title}<*)$!?^|^?!$(*>${author}<*)$!?^|^?!$(*>${completed}<*)$!?^|^?!$(*>${chapters}<*)$!?^|^?!$(*>${currChapter}<*)$!?^|^?!$(*>${string}<*)$!?^|^?!$(*>${new Date().getTime()}`,\n      category,\n      item_id: uuidv4(),\n    };\n    dispatch(sendToServer(newState));\n    setBook((prev) => ({\n      ...prev,\n      title: '',\n      author: '',\n      chapters: '',\n      category: 'Fiction',\n    }));\n    return true;\n  };\n\n  const {\n    title,\n    category,\n    author,\n    chapters,\n  } = book;\n\n  return (\n    <div className=\"form-container\">\n      <h1 className=\"add-new\">Add New Book</h1>\n      <form className=\"form\">\n        <input\n          name=\"title\"\n          type=\"text\"\n          onChange={hangleChange}\n          value={title}\n          placeholder=\"Book title\"\n          className=\"book-title\"\n        />\n        <input\n          name=\"author\"\n          type=\"text\"\n          onChange={hangleChange}\n          value={author}\n          placeholder=\"Author\"\n          className=\"book-author\"\n        />\n        <input\n          name=\"chapters\"\n          type=\"number\"\n          onChange={hangleChange}\n          value={chapters}\n          placeholder=\"Chapters\"\n          className=\"book-chapters\"\n        />\n        <select\n          className=\"book-category\"\n          name=\"category\"\n          onChange={hangleChange}\n          value={category}\n          id=\"books\"\n        >\n          {Options()}\n        </select>\n        <button onClick={onAddBook} type=\"button\" className=\"add-book-btn\">\n          ADD BOOK\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nconst ListItem = ({ route, name, index }) => {\n  if (index === 0) {\n    return (\n      <li className=\"list-item first\">\n        <NavLink className=\"item\" to={route} activeClassName=\"active-link\" exact>\n          {name}\n        </NavLink>\n      </li>\n    );\n  }\n  return (\n    <li>\n      <NavLink className=\"item\" to={route} activeClassName=\"active-link\" exact>\n        {name}\n      </NavLink>\n    </li>\n  );\n};\n\nListItem.propTypes = {\n  route: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n  index: propTypes.number.isRequired,\n};\n\nexport default ListItem;\n","import React from 'react';\nimport { FaUser } from 'react-icons/fa';\nimport ListItem from './ListItem';\n\nconst Navbar = () => {\n  const routes = [\n    { route: '/', name: 'BOOKS' },\n    { route: '/categories', name: 'CATEGORIES' },\n  ];\n\n  const ListItems = () => (\n    routes.map((route, index) => (\n      <ListItem\n        key={Math.random()}\n        index={index}\n        name={route.name}\n        route={route.route}\n      />\n    ))\n  );\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"name-list-container\">\n        <h1 className=\"app-name\">Bookstore CMS</h1>\n        <ul className=\"list-items\">\n          {ListItems()}\n        </ul>\n      </div>\n      <div className=\"user\"><FaUser className=\"fa-user\" /></div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport BooksPage from '../pages/BooksPage';\nimport CategoryPage from '../pages/CategoryPage';\nimport PageNotFound from '../pages/PageNotFound';\nimport Footer from './Footer';\nimport Form from './Form';\n\nimport Navbar from './Navbar';\n\nconst App = () => (\n  <div className=\"main\">\n    <section>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <BooksPage />\n          <Form />\n        </Route>\n        <Route path=\"/categories\">\n          <CategoryPage />\n        </Route>\n        <Route path=\"*\">\n          <PageNotFound />\n        </Route>\n      </Switch>\n    </section>\n    <section>\n      <Footer />\n    </section>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './redux/configureStore';\n\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}